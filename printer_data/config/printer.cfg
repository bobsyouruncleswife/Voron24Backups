# This file contains common pin mappings for the BIGTREETECH Manta M8P V2.0
# To use this config, the firmware should be compiled for the
# STM32H723 with a "8KiB bootloader" and USB communication.

# This config is currently only correct for V2.0 boards
# 
# See docs/Config_Reference.md for a description of parameters.

[include fluidd.cfg]

[include bigtreetech-ebb-sb-rp2040-canbus-v1.0.cfg]

[include sensorless_homing.cfg]

[include config_backup.cfg]

[include adaptive_mesh.cfg]

[include Kamp_settings.cfg]

[include stealthburner_leds.cfg]

[include NozzleClean.cfg]

[exclude_object]


[force_move]
 enable_force_move: True

[gcode_arcs]
resolution: 1.0


#[virtual_sdcard]
#path: /home/brandon/printer_data/gcodes
#on_error_gcode: CANCEL_PRINT

[mcu]
canbus_uuid=f6f94305650e
[mcu EBBCan]
canbus_uuid: 3757c0871ab3

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000    			#Max 4000
max_z_velocity: 30		#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[temperature_sensor MCU]
sensor_type: temperature_mcu

[temperature_sensor R-PI]
sensor_type: temperature_host

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on Motor1(B Motor)
[stepper_x]
# step_pin: PE2
# dir_pin: PE1
# enable_pin: !PE4

step_pin: PE6
dir_pin: PE5
enable_pin: !PC14
#uart_pin: PE3
microsteps: 16
rotation_distance: 40
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
##--------------------------------------------------------------------
position_endstop: 355
position_max: 355
##--------------------------------------------------------------------
homing_speed: 80   #Max 100
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC13
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PF4
driver_SGTHRS: 153

## Y Stepper on Motor3 (A Motor)
[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PE0

microsteps: 16
rotation_distance: 40
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: 0
##--------------------------------------------------------------------
position_endstop: 356
position_max: 356
##--------------------------------------------------------------------
homing_speed: 80  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PB9
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PF2
driver_SGTHRS: 150

#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR2
[stepper_z]
step_pin: PE2
dir_pin: PE1
enable_pin: !PE4
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
endstop_pin: probe:z_virtual_endstop

##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5 #removed for tap
##--------------------------------------------------------------------

position_max: 340

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PE3
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z1 Stepper - Rear Left on Motor4
[stepper_z1]
step_pin: PB4
dir_pin: !PB3
enable_pin: !PB6
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z1]
uart_pin: PB5
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z2 Stepper - Rear Right on Motor5
[stepper_z2]
step_pin: PG13
dir_pin: PG12
enable_pin: !PG15
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16


[tmc2209 stepper_z2]
uart_pin: PG14
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z3 Stepper - Front Right on Motor6
[stepper_z3]
step_pin: PG9
dir_pin: !PD7
enable_pin: !PG11
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z3]
uart_pin: PG10
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Extruder - Moved to alt config file
#####################################################################

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - HE1
sensor_type: Generic 3950
sensor_pin: PB1
heater_pin: PA1
max_power: 1.0
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
# 	Probe
#####################################################################

[probe]
##	Inductive Probe
##	This probe is not used for Z height, only Quad Gantry Leveling
##  NPN and PNP proximity switch types can be set by jumper
pin: ^EBBCan:gpio22
x_offset: 0
y_offset: 0
#z_offset: 0
speed: 5.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 5

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

#####################################################################
# 	Fan Control
#####################################################################
[fan_generic RPi]
pin: PA6
max_power: 1.0
shutdown_speed: 1.0
kick_start_time: 1.0
tachometer_pin: PC2
hardware_pwm: False
cycle_time: 0.02 # 25 kHz

[fan_generic Board]
pin: PA2
max_power: 1.0
shutdown_speed: 1.0
kick_start_time: 1.0
tachometer_pin: PC1
hardware_pwm: False
cycle_time: 0.02

[fan_generic fan1]
##	Controller fan - CNC_FAN2
pin: PF7
kick_start_time: 0.400
#fan_speed: 0.7
#[fan_generic Controller]
#pin: PF6
max_power: 1

[fan_generic fan2]
##	Controller fan - CNC_FAN2
pin: PF9
#fan_speed: 0.7
#[fan_generic Controller]
#pin: PF6
max_power: .5

[fan_generic fan3]
##	Controller fan - CNC_FAN2
pin: PF6
#fan_speed: 0.7
#[fan_generic Controller]
#pin: PF6
max_power: .5

[fan_generic fan4]
##	Controller fan - CNC_FAN2
pin: PF8
#fan_speed: 0.7
#[fan_generic Controller]
#pin: PF6
max_power: .5


[delayed_gcode turnonfan]
initial_duration: 1
gcode: SET_FAN_SPEED FAN=fan2 SPEED=1

[delayed_gcode turnonfan2]
initial_duration: 1
gcode: SET_FAN_SPEED FAN=fan3 SPEED=0.6

[delayed_gcode turnonfan3]
initial_duration: 1
gcode: SET_FAN_SPEED FAN=fan1 SPEED=1

[delayed_gcode turnonfan4]
initial_duration: 1
gcode: SET_FAN_SPEED FAN=fan4 SPEED=0.6

[delayed_gcode turnonfan4]
initial_duration: 1
gcode: SET_FAN_SPEED FAN=RPi SPEED=0.6

[delayed_gcode turnonfan4]
initial_duration: 1
gcode: SET_FAN_SPEED FAN=Board SPEED=0.6

#####################################################################
 #	LED Control
#####################################################################

[output_pin caselight]
pin: PA5
#pwm:true
shutdown_value: 0
value:1
#cycle_time: 0.01

#WLED Macro
[gcode_macro WLED_ON]
description: Turn WLED strip on using optional preset and resets led colors
gcode:
  {% set strip = params.STRIP|default("chamber")|string %}
  {% set preset = params.PRESET|default(4)|int %}

  {action_call_remote_method("set_wled_state",
                             strip=strip,
                             state=True,
                             preset=preset)}

[gcode_macro led_heating]
gcode:
  WLED_ON STRIP=chamber PRESET=2

[gcode_macro led_finished]
gcode:
  WLED_ON STRIP=chamber PRESET=6

[gcode_macro led_Off]
gcode:
  WLED_ON STRIP=chamber PRESET=3

[gcode_macro led_on]
gcode:
  WLED_ON STRIP=chamber PRESET=5

[gcode_macro led_mesh]
gcode:
  WLED_ON STRIP=chamber PRESET=3

[gcode_macro led_homing]
gcode:
  WLED_ON STRIP=chamber PRESET=7

[delayed_gcode setlights]
initial_duration: 10
gcode:
  WLED_ON STRIP=chamber PRESET=1

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

#[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
#home_xy_position:170,170
#speed:100
#z_hop:10

[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions

gantry_corners:
	-60,-10
	410,420
#	Probe points
points:
	50,25
	50,275
	300,275
	300,25

#--------------------------------------------------------------------
speed: 60
horizontal_move_z: 10
retries: 8
retry_tolerance: 0.05
max_adjust: 10

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE7, EXP1_2=PG1,
    EXP1_3=PG0, EXP1_4=PF15,
    EXP1_5=PF14, EXP1_6=PF13,    # Slot in the socket on this side
    EXP1_7=PF12, EXP1_8=PF11,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PE13, EXP2_2=PE12,
    EXP2_3=PE15, EXP2_4=PE11,
    EXP2_5=PE10, EXP2_6=PE14,      # Slot in the socket on this side
    EXP2_7=PE8, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<NC>

#

#####################################################################
# 	Macros
#####################################################################

[bed_mesh]
speed: 300
horizontal_move_z: 10
##--------------------------------------------------------------------
##	Uncomment below for 250mm build
#mesh_min: 40, 40
#mesh_max: 210,210
#zero_reference_position: 125,125 #for use with stock z endstop

##	Uncomment for 300mm build
#mesh_min: 40, 40
#mesh_max: 260,260
#zero_reference_position: 150,150 #for use with stock z endstop

##	Uncomment for 350mm build
mesh_min: 40, 40
mesh_max: 310,310
zero_reference_position: 175,175 #for use with stock z endstop

##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5 # Values should be odd, so one point is directly at bed center
algorithm: bicubic



[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    CLEAN_NOZZLE
    QUAD_GANTRY_LEVEL
    CLEAN_NOZZLE
    G28
    G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
   



[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("45")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  ##  Uncomment for Beacon Contact (1 of 4 for beacon contact)
  #SET_GCODE_OFFSET Z=0                                 # Set offset to 0

  # Home the printer, set absolute positioning and update the Stealthburner LEDs.
  led_homing                                            # Set Chamber lights to homing mode  
  STATUS_HOMING                                         # Set LEDs to homing-mode
  CLEAN_NOZZLE
  #G28                                                   # Full home (XYZ)
  G90                                                   # Absolute position

  ##  Uncomment for bed mesh (1 of 2 for bed mesh)
  BED_MESH_CLEAR                                       # Clear old saved bed mesh (if any)

  # Check if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    led_heating                                         # Set chamber lights to heating mode.
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
    STATUS_HEATING                                      # Set LEDs to heating-mode
    M106 S255                                           # Turn on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turn on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Display info on display
    #TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber temp

  # If the bed temp is not over 90c, then skip the heatsoak and just heat up to set temp with a 5 min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
    led_heating
    STATUS_HEATING                                      # Set LEDs to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 5 min"               # Display info on display
    #G4 P300000                                          # Wait 5 min for the bedtemp to stabilize
  {% endif %}

  # Heat hotend to 150c. This helps with getting a correct Z-home.
  SET_DISPLAY_TEXT MSG="Hotend: 150c"                   # Display info on display
  M109 S150                                             # Heat hotend to 150c

   ##  Uncomment for V2.4 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="Leveling"                      # Display info on display
  STATUS_LEVELING
  CLEAN_NOZZLE                                      # Set LEDs to leveling-mode
  QUAD_GANTRY_LEVEL                                    # Level the printer via QGL
  G28 Z                                                # Home Z again after QGL

  ##  Uncomment for bed mesh (2 of 2 for bed mesh)
  SET_DISPLAY_TEXT MSG="Bed mesh"                      # Display info on display
  STATUS_MESHING                                       # Set LEDs to bed mesh-mode
  led_mesh
  BED_MESH_CALIBRATE  adaptive=1                       # Start the bed mesh (add ADAPTIVE=1) for adaptive bed mesh

  ## Uncomment for Beacon Contact (3 of 4 for beacon contact)
  #G28 Z METHOD=CONTACT CALIBRATE=0                     # Calibrate z offset only with hot nozzle

  # Heat up the hotend up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"     # Display info on display
  STATUS_HEATING
  led_heating                                        # Set LEDs to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                      # Go to center of the bed
  M107                                                  # Turn off partcooling fan
  M109 S{target_extruder}                               # Heat the hotend to set temp

  
  # Get ready to print by doing a primeline and updating the LEDs
  SET_DISPLAY_TEXT MSG="Printer goes brr"               # Display info on display
  STATUS_PRINTING
  led_on                                       # Set LEDs to printing-mode
  G0 X{x_wait - 50} Y4 F10000                           # Go to starting point
  G0 Z0.4                                               # Raise Z to 0.4
  G91                                                   # Incremental positioning 
  G1 X100 E20 F1000                                     # Primeline
  G90                                                   # Absolute position

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament

    G91                            ; relative positioning
    G0 Z1.00 X30.0 Y30.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    
    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 42.658
#*# pid_ki = 1.571
#*# pid_kd = 289.544
#*#
#*# [probe]
#*# z_offset = -1.290
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.007435, 0.002565, 0.000065
#*# 	  -0.009935, 0.000065, 0.002565
#*# 	  -0.002435, 0.002565, 0.010065
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 138.85
#*# max_x = 211.93
#*# min_y = 153.108
#*# max_y = 196.108
